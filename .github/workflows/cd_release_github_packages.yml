name: Release to GitHub Packages

on:
  push:
    branches:
      - release-github-packages

jobs:
  build:
    runs-on: windows-latest
    env:
      Actions_Allow_Unsecure_Commands: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'
    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Get Version From Project
      uses: kzrnm/get-net-sdk-project-versions-action@v1
      id: get-version
      with:
        proj-path: src/CommonHelpers/CommonHelpers.csproj

    - name: Verify version
      run: echo version "${{steps.get-version.outputs.package-version}}"

    - name: NuGet Restore
      run: dotnet restore src/CommonHelpers.sln --runtime any

    - name: Build
      run: dotnet restore src/CommonHelpers.sln --runtime any
    
    - name: Run Tests
      run: dotnet test src/CommonHelpers.sln --runtime any
    
    - name: Decode Base64 and save PFX file
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.LancelotSoftwareCert_Base64 }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath src\CommonHelpers -AdditionalChildPath "LancelotSoftware.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Sign NuGet package
      run: dotnet nuget sign "bin/Release/CommonHelpers.${{ steps.get-version.outputs.package-version }}.nupkg" --certificate-path $(signingCert.secureFilePath) --certificate-password "${{ secrets.CertSigningPassword }}"
    
    - name: Publish Package to GitHub Registry
      run: dotnet nuget push "bin/Release/CommonHelpers.${{ steps.get-version.outputs.package-version }}.nupkg" --source "GitHubRegistry" --api-key ${{ secrets.GITHUB_TOKEN }}
