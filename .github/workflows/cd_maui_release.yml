name: CommonHelpers.Maui Release

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1.3


    # ****** Restore and Build ***** #

    - name: Install MAUI workloads (required for GitHub-hosted runners)
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore & Build CommonHelpers
      run: |
        dotnet restore src/CommonHelpers/CommonHelpers.csproj  --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers/CommonHelpers.csproj --configuration Release

    - name: Restore & Build CommonHelpers.Maui
      run: |
        dotnet restore src/CommonHelpers.Maui/CommonHelpers.Maui.csproj --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers.Maui/CommonHelpers.Maui.csproj --configuration Release

    - name: Restore & Build CommonHelpers.Tests
      run: |
        dotnet restore src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --configuration Release

    - name: Run Tests
      run: dotnet test src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --runtime any


    # ***** CommonHelpers.Maui - Package Path Identification ***** #

    - name: Get Version From Maui Project
      uses: kzrnm/get-net-sdk-project-versions-action@v1.3.0
      id: get-version-number
      with:
        proj-path: src/CommonHelpers.Maui/CommonHelpers.Maui.csproj

    - name: Verify version
      run: echo version "${{ steps.get-version-number.outputs.package-version }}"

    - name: Get CommonHelpers.Maui Package File Path
      id: get-package-path
      run : |
        $currentDirectory = Get-Location
        $outputFolder = Join-Path -Path $currentDirectory -ChildPath "src/CommonHelpers.Maui/bin/Release/"
        $match = Get-ChildItem $outputFolder -Recurse -Force -Include *.nupkg
        Write-Output "Setting output variable 'nuget-package-path' to $match"
        Write-Output "::set-output name=nuget-package-path::$match"

    - name: Verify Package File Path
      run: Write-Output Package path is "${{steps.get-package-path.outputs.nuget-package-path}}"


    # ***** NuGet Package Signing ***** #

    - name: Decode Base64 and save PFX file
      id: download-cert
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.LANCELOTSOFTWARECERT_BASE64 }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath "LancelotSoftware.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        Write-Output "Setting output variable 'certificate-path'..."
        Write-Output "::set-output name=certificate-path::$certificatePath"
    
    - name: Sign CommonHelpers.Maui NuGet package
      run: dotnet nuget sign ${{ steps.get-package-path.outputs.nuget-package-path }} --certificate-path ${{ steps.download-cert.outputs.certificate-path }} --certificate-password "${{ secrets.LANCELOTSOFTWARECERT_PASSWORD }}" --timestamper "http://timestamp.digicert.com"
    

    # ***** NuGet.org Release ***** #
    
    - name: Publish CommonHelpers.Maui to NuGet.org
      run: dotnet nuget push ${{ steps.get-package-path.outputs.nuget-package-path }} --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

    # ***** GitHub Release ***** #

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v.${{ steps.get-version-number.outputs.package-version }}.${{  env.GITHUB_RUN_ID }}"
        release_name: "CommonHelpers.Maui ${{ steps.get-version-number.outputs.package-version }}"
        draft: false
        prerelease: false

    - name: Attach Maui Release Asset
      id: upload-sideload-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get-package-path.outputs.nuget-package-path }}
        asset_name: "CommonHelpers.Maui.${{ steps.get-version-number.outputs.package-version }}.nupkg"
        asset_content_type: application/zip