name: Prerelease

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - prerelease

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1.3


    # ****** Update package version numbers ***** #

    - name: Add Release Candidate (-rc) suffix to Version Number
      run : |
        [xml]$projXml = get-content "src\CommonHelpers\CommonHelpers.csproj"
        $currentVer = $projXml.Project.PropertyGroup.Version
        $suffix = "-rc"
        $newVer = $currentVer + $suffix
        $projXml.Project.PropertyGroup.Version = $newVer
        $projXml.save("src\CommonHelpers\CommonHelpers.csproj")


    # ****** Restore and Build ***** #

    # CommonHelpers project

    - name: Restore & Build CommonHelpers
      run: |
        dotnet restore src/CommonHelpers/CommonHelpers.csproj  --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers/CommonHelpers.csproj --configuration Release

    - name: Add CommonHelpers Bin to NuGet Package Sources
      run: dotnet nuget add source "${{ github.workspace }}\src\CommonHelpers\bin" --name "CommonHelpers_Bin"

    # CommonHelpers.Maui project

    - name: Install MAUI workloads (required for GitHub-hosted runners)
      shell: pwsh
      run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

    - name: Restore & Build CommonHelpers.Maui
      run: |
        dotnet restore src/CommonHelpers.Maui/CommonHelpers.Maui.csproj --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers.Maui/CommonHelpers.Maui.csproj --configuration Release

    - name: Add CommonHelpers.Maui Bin to NuGet Package Sources
      run: dotnet nuget add source "${{ github.workspace }}\src\CommonHelpers.Maui\bin" --name "CommonHelpers.Maui_Release"

    # CommonHelpers.Tests project

    - name: Restore & Build CommonHelpers.Tests
      run: |
        dotnet restore src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --runtime any --ignore-failed-sources
        dotnet build src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --configuration Release

    - name: Run Tests
      run: dotnet test src/CommonHelpers.Tests/CommonHelpers.Tests.csproj --runtime any


    # ***** CommonHelpers - Package Path Identification ***** #

    - name: Get Version From Project
      uses: kzrnm/get-net-sdk-project-versions-action@v1.3.0
      id: get-version
      with:
        proj-path: src/CommonHelpers/CommonHelpers.csproj

    - name: Verify version
      run: Write-Output "Version is ${{ steps.get-version.outputs.package-version }}"

    - name: Get Package File Path
      id: get-package-path
      run : |
        $currentDirectory = Get-Location
        $outputFolder = Join-Path -Path $currentDirectory -ChildPath "src/CommonHelpers/bin/Release/"
        $match = Get-ChildItem $outputFolder -Recurse -Force -Include *.nupkg
        Write-Output "Setting output variable 'nuget-package-path' to $match"
        Write-Output "::set-output name=nuget-package-path::$match"
    
    - name: Verify Package Path
      run: Write-Output "Package path is ${{ steps.get-package-path.outputs.nuget-package-path }}"

    # ***** CommonHelpers.Maui - Package Path Identification ***** #

    - name: Get Maui Version From Project
      uses: kzrnm/get-net-sdk-project-versions-action@v1.3.0
      id: get-version-maui
      with:
        proj-path: src/CommonHelpers.Maui/CommonHelpers.Maui.csproj

    - name: Verify Maui version
      run: echo version "${{ steps.get-version-maui.outputs.package-version }}"

    - name: Get Maui Package File Path
      id: get-package-path-maui
      run : |
        $currentDirectory = Get-Location
        $outputFolder = Join-Path -Path $currentDirectory -ChildPath "src/CommonHelpers.Maui/bin/Release/"
        $match = Get-ChildItem $outputFolder -Recurse -Force -Include *.nupkg
        Write-Output "Setting output variable 'nuget-package-path-maui' to $match"
        Write-Output "::set-output name=nuget-package-path-maui::$match"

    - name: Verify Maui Package Path
      run: Write-Output Package path is "${{steps.get-package-path-maui.outputs.nuget-package-path-maui}}"


    # ***** NuGet Package Signing ***** #

    - name: Decode Base64 and save PFX file
      id: download-cert
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.LANCELOTSOFTWARECERT_BASE64 }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath "LancelotSoftware.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        Write-Output "Setting output variable 'certificate-path'..."
        Write-Output "::set-output name=certificate-path::$certificatePath"

    - name: Sign CommonHelpers NuGet package
      run: dotnet nuget sign ${{ steps.get-package-path.outputs.nuget-package-path }} --certificate-path ${{ steps.download-cert.outputs.certificate-path }} --certificate-password "${{ secrets.LANCELOTSOFTWARECERT_PASSWORD }}" --timestamper "http://timestamp.digicert.com"

    - name: Sign CommonHelpers.Maui NuGet package
      run: dotnet nuget sign ${{ steps.get-package-path-maui.outputs.nuget-package-path-maui }} --certificate-path ${{ steps.download-cert.outputs.certificate-path }} --certificate-password "${{ secrets.LANCELOTSOFTWARECERT_PASSWORD }}" --timestamper "http://timestamp.digicert.com"

    
      # ***** Upload Artifacts ***** #

    - name: Upload CommonHelpers NuGet package artifact
      uses: actions/upload-artifact@v3
      with:
        name: "CommonHelpers.${{ steps.get-version.outputs.package-version }}.nupkg"
        path: ${{ steps.get-package-path.outputs.nuget-package-path }}

    - name: Upload CommonHelpers.Maui NuGet package artifact
      uses: actions/upload-artifact@v3
      with:
        name: "CommonHelpers.Maui.${{ steps.get-version-maui.outputs.package-version }}.nupkg"
        path: ${{ steps.get-package-path-maui.outputs.nuget-package-path-maui }}


    # ***** GitHub Release ***** #

    - name: Generate version number with date and workflow Run Number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        echo "::set-output name=DATED_VERSION_NUM::$ver"

    - name: Create GitHub Prerelease
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ steps.version-creator.outputs.DATED_VERSION_NUM }}-rc"
        release_name: "CommonHelpers ${{ steps.version-creator.outputs.DATED_VERSION_NUM }}-rc"
        draft: false
        prerelease: true

    - name: Attach CommonHelpers prerelease asset
      id: upload-sideload-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get-package-path.outputs.nuget-package-path }}
        asset_name: "CommonHelpers.${{ steps.get-version.outputs.package-version }}.nupkg"
        asset_content_type: application/zip

    - name: Attach CommonHelpers.Maui Prerelease Asset
      id: upload-maui-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get-package-path-maui.outputs.nuget-package-path-maui }}
        asset_name: "CommonHelpers.Maui.${{ steps.get-version-maui.outputs.package-version }}.nupkg"
        asset_content_type: application/zip
